<tool id="Peptide_library_generation-2" name="Peptide library generation-2" version="1.1.2">
  <description>Generates peptide sequence library </description>

  <requirements>
    <requirement type="package" version="0.24.2">pandas</requirement>
    <requirement type="package" version="4.1.2">modlamp</requirement> 
  </requirements>
  <stdio>
    <exit_code range="1" level="fatal" />
  </stdio>
    <command detect_errors="exit_code"><![CDATA[


        python '$__tool_directory__/modlamp_librarygeneration.py'  '$SelLibGene.LibGene'

                        #if $SelLibGene.LibGene == 'Random'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmin_s '$SelLibGene.lenmin_s'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --S_proba  '$SelLibGene.S_proba'
                        #end if 

                        #if $SelLibGene.LibGene == 'Helices'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmin_s '$SelLibGene.lenmin_s'
                            --lenmax_s '$SelLibGene.lenmax_s'                 
                        #end if 

                        #if $SelLibGene.LibGene == 'Kinked'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                        #end if 

                        #if $SelLibGene.LibGene == 'Oblique'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                        #end if 

                        #if $SelLibGene.LibGene == 'Centrosymmetric'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                        #end if 

                        #if $SelLibGene.LibGene == 'HelicesACP'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                        #end if    

                        #if $SelLibGene.LibGene == 'Hepahelices'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                        #end if 

                        #if $SelLibGene.LibGene == 'AMPngrams'
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                        #end if

                        #if $SelLibGene.LibGene == 'AmphipathicArc' 
                            --seq_num '$SelLibGene.seq_num'
                            --lenmax_s '$SelLibGene.lenmax_s'
                            --lenmin_s '$SelLibGene.lenmin_s'
                            --arcsize '$SelLibGene.arcsize'
                            --hyd_gra '$SelLibGene.hydgra'
                        #end if      


                        --OutFasta '$output1'

    ]]></command>


  <inputs>

    <conditional name='SelLibGene' >

        <param name="LibGene" type="select" label="LibGene" argument="">
          <option value="Random">Random sequences</option>
          <option value="Helices">Presumed amphipathic helical sequences with a hydrophobic moment</option>
          <option value="Kinked">Presumed amphipathic helices with a kink (Pro residue)</option>
          <option value="Oblique">Presumed oblique oriented sequences in presence of libid membranes</option>
          <option value="Centrosymmetric">Centrosymmetric sequences with a symmetry axis</option>
          <option value="HelicesACP">Sequences with the amino acid probabiliy of helical ACPs</option>
          <option value="Hepahelices">Presumed amphipathic helices with a heparin-binding-domain</option>
          <option value="AMPngrams">Sequences from most frequent ngrams in the APD3</option>
          <option value="AmphipathicArc">Presumed amphipathic helices with controlled hydrophobic arc size</option>

        </param>

        <when value="Random">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />
            <param name="S_proba"  type="float" value="1.0" label="S_proba" argument="--S_proba" />
           
        </when>

        <when value="Helices">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />

        </when>

        <when value="Kinked">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />

        </when>

        <when value="Oblique">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />

        </when>

        <when value="Centrosymmetric">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />
            <param name="symmetry_s" type="select" label="symmetry_s" argument="--symmetry_s">
              <option value="asymmetric">asymmetric</option>
              <option value="symmetric" >symmetric</option>
            </param>
        </when>

        <when value="HelicesACP">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />
        </when>

        <when value="Hepahelices">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />
        </when>

        <when value="AMPngrams">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />
        </when>

        <when value="AmphipathicArc">
            <param name="seq_num"  type="integer" value="5" label="seq_num" argument= "--seq_num"/>
            <param name="lenmin_s" type="integer" value="7" label="lenmin_s" argument="--lenmin_s" />
            <param name="lenmax_s" type="integer" value="21" label="lenmax_s" argument="--lenmax_s" />
            <param name="arcsize" type="integer" value="180" argument="--arcsize" />
            <param name="hydgra" type="boolean"  value="false" argument="--hyd_gra" />
        </when>

    </conditional>
  </inputs>


  <outputs>
        <data name='output1' format='tabular' label="Out.fasta" />    
  </outputs>
  <tests>
    <test>
      <param name="input" value="1.bed"/>
      <param name="cond" value="c2"/>
      <output name="out_file1" file="gsummary_out1.tabular"/>
    </test>
  </tests>
  <help>

  </help>
</tool>



