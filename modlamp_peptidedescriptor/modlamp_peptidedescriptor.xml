<tool id="modlamp_peptidedescriptor" name="modlamp peptidedescriptor" version="1.1.2">
  <description>for any numerical column</description>
  <requirements>
    <requirement type="package" version="0.24.2">pandas</requirement>
    <requirement type="package" version="4.1.2">modlamp</requirement> 
  </requirements>
  <stdio>
    <exit_code range="1" level="fatal" />
  </stdio>
    <command detect_errors="exit_code"><![CDATA[


        python '$__tool_directory__/modlamp_peptidedescriptor.py'  '$SelLibGene.LibGene'



                        #if $SelLibGene.LibGene == 'Random'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                            --S_proba  $SelLibGene.S_proba
                        #end if 

                        #if $SelLibGene.LibGene == 'Helices'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s                         
                        #end if 

                        #if $SelLibGene.LibGene == 'Kinked'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if 

                        #if $SelLibGene.LibGene == 'Oblique'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if 

                        #if $SelLibGene.LibGene == 'Centrosymmetric'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if 

                        #if $SelLibGene.LibGene == 'HelicesACP'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if    

                        #if $SelLibGene.LibGene == 'Hepahelices'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if 

                        #if $SelLibGene.LibGene == 'AMPngrams'
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if

                        #if $SelLibGene.LibGene == 'AmphipathicArc' 
                            --seq_num $SelLibGene.seq_num
                            --lenmax_s $SelLibGene.lenmax_s
                            --lenmin_s $SelLibGene.lenmin_s
                        #end if                                    

    ]]></command>


  <inputs>


    <conditional name='SelLibGene' >

        <param name="LibGene" type="select" label="LibGene" argument="">
          <option value="AutoCorrCal">AutoCorrCal</option>
          <option value="CrossCorrCal">CrossCorrCal</option>
          <option value="CalculateMovement">CalculateMovement</option>
          <option value="GlobalCal">GlobalCal</option>
          <option value="ProfileCal">ProfileCal</option>
          <option value="ArcCal">ArcCal</option>
        </param>

        <when value="AutoCorrCal">
            <param name="InFile" type="data" format="tabular" argument= "--InFile"/>
            <param name="WindowSize" type="integer" value="7" argument="--WindowSize" />
            <param name="ScaleName"  type="text" value="Eisenberg" argument="--ScaleName"/>
        </when>

        <when value="CrossCorrCal">
            <param name="InFile" type="data" format="tabular" argument= "--InFile"/>
            <param name="WindowSize" type="integer" value="7" argument="--WindowSize" />
            <param name="ScaleName"  type="text" value="Eisenberg" argument="--ScaleName"/>

        </when>

        <when value="CalculateMovement">
            <param name="InFile"  type="data" formate="tabular" argument= "--seq_num"/>
            <param name="WindowSize" type="integer" value="1000" argument="--WindowSize" />
            <param name="Angle" type="integer" value="100" argument="--Angle" />
            <param name="Modality" type="text" value="max" argument="--Modality" />
            <param name="ScaleName"  type="text" value="Eisenberg" argument="--ScaleName"/>
        </when>

        <when value="GlobalCal">
            <param name="InFile"  type="data" formate="tabular" argument= "--seq_num"/>
            <param name="WindowSize" type="integer" value="1000" argument="--lenmin_s" />
            <param name="Modality" type="text" value="max" argument="--Modality" />
            <param name="ScaleName"  type="text" value="Eisenberg" argument="--ScaleName"/>

        </when>

        <when value="ProfileCal">
            <param name="InFile" type="data" formate="tabular" argument= "--InFile"/>
            <param name="ProfType" type="text" value="uH" argument="--ProfType" />
            <param name="WindowSize" type="integer" value="7" argument="--lenmin_s" />
            <param name="ScaleName"  type="text" value="Eisenberg" argument="--ScaleName"/>
        </when>

        <when value="ArcCal">
            <param name="InFile"  type="data" formate="tabular" argument= "--seq_num"/>
            <param name="Modality" type="text" value="max" argument="--Modality" />
            <param name="ScaleName"  type="text" value="Eisenberg" argument="--ScaleName"/>
        </when>

    </conditional>
  </inputs>


  <outputs>
        <data name='output1' format='tabular' label="out.tsv" />    
        <data name='output2' format='html' label="repot.html" />
  </outputs>
  <tests>
    <test>
      <param name="input" value="1.bed"/>
      <param name="cond" value="c2"/>
      <output name="out_file1" file="gsummary_out1.tabular"/>
    </test>
  </tests>
  <help>

  </help>
</tool>



